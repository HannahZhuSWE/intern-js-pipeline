"use strict";(self.webpackChunkdocusaurus_dashboard=self.webpackChunkdocusaurus_dashboard||[]).push([[8565],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),i=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=i(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=i(r),f=n,b=u["".concat(l,".").concat(f)]||u[f]||d[f]||a;return r?o.createElement(b,s(s({ref:t},c),{},{components:r})):o.createElement(b,s({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:n,s[1]=p;for(var i=2;i<a;i++)s[i]=r[i];return o.createElement.apply(null,s)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},3376:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>i});var o=r(7462),n=(r(7294),r(3905));const a={sidebar_position:3},s="Report Results to Dashboard",p={unversionedId:"report-to-centralized-repo/report-results-to-dashboard",id:"report-to-centralized-repo/report-results-to-dashboard",title:"Report Results to Dashboard",description:"Follow the steps below to report the test results to the dashboard:",source:"@site/docs/report-to-centralized-repo/report-results-to-dashboard.md",sourceDirName:"report-to-centralized-repo",slug:"/report-to-centralized-repo/report-results-to-dashboard",permalink:"/docs/report-to-centralized-repo/report-results-to-dashboard",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Add personal access token to repo",permalink:"/docs/report-to-centralized-repo/add-pat"},next:{title:"Setup Github workflow to notify dashboard",permalink:"/docs/report-to-centralized-repo/setup-notify-workflow"}},l={},i=[],c={toc:i};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"report-results-to-dashboard"},"Report Results to Dashboard"),(0,n.kt)("p",null,"Follow the steps below to report the test results to the dashboard:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Append the following steps to the ",(0,n.kt)("inlineCode",{parentName:"li"},"playwright.yml")," file below the current steps in the ",(0,n.kt)("inlineCode",{parentName:"li"},"test")," job.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"    - name: Get current date\n      id: date\n      run: echo \"::set-output name=date::$(date +'%Y-%m-%d')\"\n    - name: Upload HTML report as Artifact\n      uses: actions/upload-artifact@v2\n      if: always()\n      with: \n        name: onDemand\n        path: pw-report/\n")))}d.isMDXComponent=!0}}]);